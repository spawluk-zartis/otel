services:
  client:
    build:
      context: ./Client
      dockerfile: ../Dockerfile # installs OpenTelemetry .NET Automatic Instrumentation
    entrypoint: "./out/Client http://service:5000/roll"
    env_file:
      - otel-dotnet.env # enables OpenTelemetry .NET Automatic Instrumentation
    environment:
      # OpenTelemetry environmental variables:
      OTEL_SERVICE_NAME: "client"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4318"
    depends_on:
      - service
      - otel-collector

  service:
    build:
      context: ./Service
      dockerfile: ../Dockerfile # installs OpenTelemetry .NET Automatic Instrumentation
    entrypoint: "./out/Service --urls http://*:5000"
    env_file:
      - otel-dotnet.env # enable OpenTelemetry .NET Automatic Instrumentation
    environment:
      ConnectionStrings__Database: "Server=sqlserver,1433;User=sa;Password=yourStrong(!)Password;TrustServerCertificate=True;"
      # OpenTelemetry environmental variables:
      OTEL_SERVICE_NAME: "service"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4318"
    ports:
      - 5000:5000
    depends_on:
      - sqlserver
      - otel-collector

  sqlserver:
    image: mcr.microsoft.com/mssql/server:latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=yourStrong(!)Password
    ports:
      - "1433:1433"

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel-config.yaml:/etc/otel/config.yaml
      - ./log:/log/otel
    command: --config /etc/otel/config.yaml
    environment:
      JAEGER_ENDPOINT: "jaeger:4317"
      LOKI_ENDPOINT: "http://loki:3100/loki/api/v1/push"
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    depends_on:
      - jaeger
      - prometheus
      - loki

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # Jaeger Web UI

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    ports:
      - "3000:3000"
